{"title":"Machine Learning: Applications in Social Science Research (ICPSR)","markdown":{"yaml":{"title":"Machine Learning: Applications in Social Science Research (ICPSR)","author":[{"name":"Stone Neilon","url":"https://stoneneilon.github.io/","orcid":"0009-0006-6026-4384","affiliation":"PhD student of political science @ The University of Colorado Boulder","affiliation-url":"https://www.colorado.edu/polisci/people/graduate-students/stone-neilon"}],"date":"06-10-2024","categories":["Summer","ICPSR",2024,"Methods"],"citation":{"url":"https://samanthacsik.github.io/posts/2022-10-24-my-blog-post/"},"image":"terminator.jpeg","draft":false},"headingText":"Preface","containsRefs":false,"markdown":"\n\n\nProfessor: Christopher Hare\n\nAffiliation: UC Davis\n\nTHESE ARE NOTES! These do not and cannot replace learning the material through a classroom setting.\n\n## Files for Download\n\n### Module 1 Files\n\n### Module 2 Files\n\n### Module 3 Files\n\n### Module 4 Files\n\n## Required reading\n\n1.  James, Gareth, Daniela Witten, Trevor Hastie, and Robert Tibshirani. 2021. An Introduction\\\n    to Statistical Learning with Applications in R. 2nd ed. New York: Springer. https://www.\\\n    statlearning.com/\n\n2.  Boehmke, Bradley and Brandon Greenwell. 2019. Hands-On Machine Learning with R. Boca\\\n    Raton, FL: CRC Press. https://koalaverse.github.io/homlr/\n\n3.  Chollet, Francois, J.J. Allaire, and Tomasz Kalinowski. 2022. Deep Learning with R. 2nd ed.\\\n    Shelter Island, NY: Manning.\n\n## Coding Software\n\nThis course teaches machine learning through R. R is pretty good with machine learning and covers everything we need to. Python is good but in the interest of time, we focus on R.\n\n# Module 1: Motivation and Foundations\n\n## History of Machine Learning in Social Science\n\n### The People-Machine\n\nIn the 1950/1960s, some researchers put together a model for Kennedy's presidential campaign. The attempt was to predict voter turnout based on issue salience. Specifically, if anti-Catholicism became more salient near the election, how would that influence voter turnout? The idea was to simulate human behavior.\n\nThe point of this reading is to draw that lineage of social science and machine learning. This field is **not** new.\n\n### Statistical Modeling: The Two Cultures - Leo Breiman (2001)\n\nVery important reading. If there is any reading you should do, it should be this one - Professor Hare\n\n-   Data modeling culture\n\n    -   specify the data generating process between X and y\n\n    -   focus on inference from model parameters\n\n    -   more emphasis on **deductive** reasoning\n\n-   Algorithmic modeling culture\n\n    -   Capture the black box process between X and y\n\n    -   rather than specifying the relationship (i.e. the effect is linear, education's effect is quadratic, etc), we let the model specify or figure it out.\n\n    -   Focus is on the quality of model predictions\n\n    -   No true model: more emphasis on **inductive reasoning**/learning from data\n\n        -   lets let the data guide the model\n\n            -   contrast this with letting theory guide the model.\n\n        -   No one is saying inductive \\> deductive **or** deductive \\> inductive\n\n            -   Isaac Asimov: \"The most exciting phrase to hear in science, the one that heralds new discoveries, is not 'Eureka' but 'That's funny'...\"\n\n            -   Karl Popper emphasized deductive reasoning, but creating or discovering new theories is a necessarily inductive process (no deductive \"machinery\" is possible for theory building).\n\n## Parametric vs. Non-Parametric models\n\nOur goal is to use data to estimate f(x) (this is the line or true relationship). We want to find a function $\\hat{f}$ such that $Y\\approx \\hat{f}(\\textbf{X})$ for any observation (X, Y). So how do we estimate f(X) (the line/relationship)? We can use either a parametric or non-parametric approach/model. Up until now, I have only been taught parametric (this being linear regression, etc.).\n\nSo which is better, parametric or non-parametric? The answer is simple: *the parametric approach will outperform the non-parametric approach if the parametric form that has been selected is close to the true form of* $f$*.*\n\n### Parametric Methods\n\n1.  We make an assumption about the functional form, or shape of f (the function/line). Usually this assumption is that $f$ is linear.\n\n2.  We then need to fit or train the model. This means we need to estimate the parameters ($\\beta_1,\\beta_2,...,\\beta_p$).\n\n    1.  the most common approach and the one we have been trained extensively is ordinary least squares (OLS).\n\n        1.  OLS is one of the many possible ways to fit the linear model\n\n            1.  We use OLS because when the assumptions are met, it is BLUE.\n\n3.  One potential downside of a parametric approach is that the model we choose will usually not match the true unknown form of $f$.\n\n    1.  we want to be careful about over-fitting the data.\n\n        1.  this means they follow the errors, or noise, too closely.\n\n        2.  this is bad because your model will struggle to estimate responses on new observations that were not part of the original training data set.\n\n4.  Maybe the true relationship has some curvature (it isn't linear) *but* the linear model we create gets us reasonably close to describing the relationship between the X and Y variables.\n\n### Non-Parametric Methods\n\n1.  We **do not** make assumptions about the functional form of $f$.\n\n    1.  non-parametric approaches estimate $f$ as close to the data points as possible without being too rough or wiggly\n\n        1.  lower residuals\n\n2.  One major disadvantage of non-parametric approaches is that a lot more observations are needed to get an accurate estimate for $f$.\n\n3.  You can still over fit a non parametric model.\n\n### Prediction Accuracy and Model Interpretability\n\n![](flex_inter_tradeoff.png){fig-align=\"center\"}\n\n-   An obvious question that follows is: Why would we ever chose a more restrictive method instead of a very flexible approach? Wouldn't more flexibility get us closer to the true $f$?\n\n    -   restrictive models are easier to interpret\n\n        -   the relationship is straightforward and easy to understand!\n\n        -   OLS is not only really good (it is the best when assumptions are met) but it is super easy to interpret.\n\n### Supervised versus Unsupervised Learning\n\n#### Supervised\n\n-   Pretty much all the models I have used thus far (and listed prior) use supervised learning.\n\n    -   each observation of the predictor measurement has an associated response measurement for $x_i$ there is an associated $y_i$ value.\n\n-   Goal: prediction and inference (both involve modeling the relationship between predictors and outcome of interest)\n\n-   **The goal of supervised learning is to learn a predictive model that maps features of the data (e.g. house size, location, floor type, ...) to an output (e.g. house price). If the output is categorical, the task is called classification, and if it is numerical, it is called regression.**\n\n#### Unsupervised\n\n-   More challenging\n\n-   not focused on in this workshop.\n\n-   Goal: search for simple structure underlying data set (what are the relationships between variables)\n\n-   You have a bunch of dependent variables and you think there is some cause underlying them. We are trying to back out an X.\n\n-   for every observation we observe a *vector* of measurements $x_i$ but no associated response $y_i$\n\n    -   like going in blind\n\n-   called unsupervised because we lack a response variable that can supervise our analysis.\n\n-   One type is called cluster analysis.\n\n#### Semi-supervised learning\n\n-   more rare\n\n-   kind of in between the two.\n\n-   don't worry about this, we don't go over it.\n\n## Overfitting\n\n-   Very important concept in machine learning.\n\n-   **Overfitting occurs when a model starts to memorize the aspects of the training set and in turn loses the ability to generalize.**\n\n-   Overfitting is reducing bias at a tremendous cost to variance.\n\n-   We want a balance that gets us as close as possible.\n\n    -   what is the right amount of complexity for our model?\n\n        -   this bleeds into \"tuning\" our parameters.\n\n## The Bias - Variance Trade Off\n\n-   We need to find a balance between overfitting and underfitting our model. This balance is the bias-variance trade off.\n\n-   When we are estimating $f$, we don't want to ignore true nonlinear complexities, but we also want parsimonious models of social/behavioral phenomena that *generalize* well.\n\n-   Our estimated function $\\hat{f}$ should be an approximation to $f$ (i.e., the true data generating process) that minimizes bias and variance.\n\n-   This is referred to as a trade-of because it is easy to obtain a method with extremely low bias but high variance (for instance, by drawing a curve that passes through every single training observation) or a method with very low variance but high bias (by ftting a horizontal line to the data). The challenge lies in finding a method for which both the variance and the squared bias are low.\n\n### Variance\n\n1.  Variance refers to the amount by which $\\hat{f}$ would change if we estimated it using a different training data set.\n\n    1.  remember that we are trying to estimate $f$ using our sample. There is uncertainty around it. Different data may give us a different $\\hat{f}$.\n\n        1.  We can use one sample to estimate the variance around the estimate.\n\n            1.  this of course is called Standard Error. If a method has high variance then small changes in the training data can result in large changes in $\\hat{f}$.\n\n2.  In general more flexible statistical methods have higher variance.\n\n### Bias\n\n1.  refers to the coefficient.\n\n2.  As a general rule, as we use more flexible methods, the variance will increase and the bias will decrease.\n\n3.  Overfitting a model reduces the bias as much as possible at the expense of variance.\n\n4.  Does our estimate $\\approx$ the true population estimate\n\n## Model Error\n\nThe goal is to reduce both of these errors. But it is a bit more complex. How do we know the level of error is reducible or irreducible? The answer is gauge its predictive power. You do this through the error of your test sample. The section on cross validation will clear this up a bit more (hopefully). We want to minimize the test error.\n\n### Reducible error\n\n-   Error due to disparities between $\\hat{f}$ and $f$.\n\n-   This relates to the functional form.\n\n-   Do we include all of the relevant parameters (variables)?\n\n-   is it linear or quadratic?\n\n-   these are the elements we can control\n\n### Irreducible error\n\n-   Error due to stochastic elements that is built into Y, separate from data-generating process of $f$.\n\n-   This is error that we cannot model.\n\n    -   it is the \"randomness\" of the observations.\n\n-   Think about people. We can try to model them but every human is different for infinite reasons. We can't model that and thus, that is irreducible error.\n\n-   there will still be error remaining even if we approximate $f$ exactly.\n\n## Cross-Validation\n\nBefore diving into cross-validation and what it is, we need to continue the thread started above on model error. We need to estimate two kinds of model error to deal with bias-variance trade off.\n\n### Training Error:\n\n1.  Error rate produced when model is applied to **in-sample** data\n\n    1.  The error rate for the data used to estimate the model: how well does the model fit to existing data?\n\n### Testing Error:\n\n1.  The average error that results from using a statistical learning method to predict the response of new, **out of sample** observation.\n\n    1.  The error rate for outside data: how well does the model fit **new** data.\n\nThese two types of error are quite different: in particular, the training error rate can drastically understate the test error rate.\n\n### How do we estimate these errors?\n\nWe use cross-validation! What is it?\n\n#### Cross-validation explanation\n\n1.  Randomly divide the available set of samples into two parts: a training set and a test or hold-out set.\n\n    1.  keep 80% of the data for training and then use 20% of the data for testing\n\n        1.  this ratio can range. Could use 70-30, 50-50, etc.\n\n2.  Estimate the model using the remaining of the data.\n\n    1.  Apply the model to the observations in that subset, generating predictions $(\\hat{Y}_{test}=\\hat{f}(X_{test}))$ and residuals $Y_{test}-\\hat{Y}_{test}$ to estimate testing error.\n\n3.  One issue in doing this: we lose data.\n\n    1.  Maybe we have very little data...we don't want to give up some of that data! What do we do?\n\n        1.  To get around this, we use K-fold cross-validation.\n\n### K-fold Cross-Validation\n\n1.  Randomly divide the data into K equal sized parts. We leave out part k, fit the model to the other K-1 parts (combined), and then obtain predictions for the left-out kth part.\n\n2.  Imagine we have all the data and we bin it into 4 compartments/sections. This would be called 4-fold cross validation.\n\n    1.  Imagine we use the first three compartments to train and then the last section to test\n\n        1.  then do it again but use 3 different compartments and a different section to test.\n\n            1.  keep going through the permutations.\n\n                1.  you average across all\n\n                    1.  all the data is used.\n\n    2.  You can then compare which method/model does a better job at prediction.\n\n3.  The amount of folds you chose is arbitrary\n\n    1.  most popular is 5 or 10.\n\n4.  You do this for any ML model.\n\n![k-fold Cross Validation Visualized](k_fold_CV.png){fig-align=\"center\"}\n\n## Multivariate Adaptive Regression Splines (MARS)\n\n1.  Imagine doing a regression BUT instead of one line, you can add a bunch to fit the data.\n\n2.  Allow for nonlinearities and automate feature selection within the linear regression framework by searching for optimal hinge points or knots.\n\n    1.  this produces a series of hinge functions h(x-a), where a denotes the location of the knot and h is a regression coefficient.\n\n3.  more flexible than regression (duh)\n\n4.  We are concerned with tuning, not really the variables.\n\n5.  We just throw a bunch of Xs and specify our dependent variable and we just let the machine figure it out.\n\n6.  coefficients are not attached to variables but regions.\n\n7.  See mars.r for example code and more discussion.\n\n## Classification problems\n\n1.  When we move from regression problems (where y is continuous) to classification problems (where y is categorical), we need to assess model performance differently\n\n2.  Include different kind of fit statistics in your MLE model.\n\n3.  Confusion matrix:\n\n    1.  more to discuss here. TK 06/20/24\n\n## Curse of Dimensionality\n\n1.  Including a large number of predictor variables introduces data sparsity.\n\n    1.  this seems to relate (at least to me) as degrees of freedom (might be wrong)\n\n2.  Shrinkage or regularization methods purposefully bias the coefficients (towards zero) in such a way that improves overall predictive performance by navigating the bias-variance trade-off.\n\n3.  This is more of a conceptual problem. Every additional independent variable we include increases the space exponentially: the space that we're operating in for DV \\~ IV1 + IV2 + IV3 is exponentially larger than DV \\~ IV1 + IV2.\n\n    1.  And so we'll end up in cases where we don't have observations in unique combinations of IV1, 2, and 3. A parametric model, like OLS, will fit a line through the middle of the space (to minimize error) but it will end up giving us predictions for observations that don't exist\n\n        1.  e.g., if we are predicting vote choice using race (white, black, Asian) and partisanship (democrat, independent, republican), if we have 1,000 observations we should observe every combination of those IVs. However, if we add additional covariates, like income, gender, state of residence etc., we are likely to end up with situations where we have no observations with a given combination of covariate values (e.g., perhaps we have no black, female, republicans who make \\>\\$100k, and live in Alaska)\n\n            1.  This is a problem ML field cares about but the political science field does not give this issue much attention (they should).\n\n## Receiver-operator characteristic curves\n\n-   navan.name/roc/\n\n    -   good explanation of ROC.\n\n        -   the more we separate the sets of outcomes (blue and red pdfs), the better our model is.\n\n-   True positive rate against the False positive rate\n\n-   Binary Classification method\n\n-   seems popular in health.\n\n-   Area under the Curve (AUC) - we want to maximize this value.\n\n-   I think we use to evaluate different models?????????\n\n## Shrinkage and Regularization\n\nI'm confused about this...still not clear. Why would we need this when we have k-fold cross validation...doesn't that minimize bias? How do we know when to use these methods? Answer from 06/21 - we apply cross validation to these methods to determine what amount of shrinkage we want.\n\n-   Our end-goal is an accurate model (as measured by out-of-sample or test set performance)\n\n    -   We can use shrinkage and regularization to help us.\n\n        -   helps us prevennt over fitting.\n\n-   Shrinkage pulls coefficients closer to zero as the regularization parameter increases.\n\n### Ridge Regression (L2)\n\n-   AKA penalized least squares or penalized likelihood) is another shrinkage method that penalizes large magnitude values of beta coefficients in regression models.\n\n-   we add bias to our coefficients\n\n    -   why would we do that?\n\n        -   push our regression parameters closer to zero.\n\n            -   **helps our variance**.\n\n                -   bias-variance trade off to maximize fit for out of sample observations.\n\n-   Literally a regression model, just adding a penalization function. (square the beta)\n\n-   Shrinkage: when you have less data shrink to the overall mean.\n\n    -   think of batting averages - Hank Aaron vs. some random guy who had one at bat and has a perfect batting average.\n\n-   $\\lambda$ is important\n\n    -   can be any value between zero and infinity\n\n    -   if zero then the ridge regression penalty will equal the same line as the OLS line.\n\n    -   the larger the value, the greater the penalty\n\n        -   think of the slope of the line changing.\n\n    -   How do we figure out which $\\lambda$ is the most optimal?\n\n        -   We use cross-validation!\n\n            -   to determine what $\\lambda$ produces lowest variance\n\n-   Can also be used if IV is discrete.\n\n    -   and logistic regression.\n\n### Lasso (L1)\n\n## Simulations\n\n1.  Simulations are most of what we do here.\n\n2.  Re-sampling to estimate uncertainty intervals\n\n3.  Bootstrapping to estimate uncertainty intervals\n\n4.  Monte Carlo experiments to learn about the properties of an estimator, uncover predictor effects, and evaluate counterfactual/future scenarios.\n\n## Bootstrapping\n\n1.  We can make a whole bunch of new samples with the original sample.\n\n2.  We can't see the population parameter, but we can estimate it using repeated samples via bootstrapping.\n\n    1.  we can get pretty damn close to it!\n\n# Meeting with Sam Fuller (TA) 06/24\n\n1.  By minimizing the test error, we can discriminate between reducible and irreducible error. Correct?\n\n2.  these algorithms are really good at fitting data\n\n3.  you must cross validate - basically.\n\n    1.  very useful\n\n4.  Parametric v. non-parametric difference\n\n    1.  ML land is focused on prediction - we don't care about the black box\n\n        1.  we just care about how good it is.\n\n    2.  in parametric land we care about the variable - not really R\\^2\n\n    3.  Maybe this division outlined above is not ideal\n\n        1.  distinction without a difference.\n\n    4.  Parametric models are not perfect and not necessarily the best for causal inference - Sam.\n\n5.  Read Breiman\n\n6.  The issue is with this method is that you will get pushback from people who don't understand.\n\n7.  still need to know what and how to measure - this is where the theory comes from.\n\n8.  How do we know which models to use.\n\n    1.  Sam thinks MARS and regularization are lipstick on a pig\n\n        1.  still using parametric assumptions but using ML\n\n9.  Inference vs ML\n\n    1.  Sam thinks interpretation is better than inference.\n\n10. Random forests is the meet of the class.\n\n    1.  dumb decision trees but when we sum them all together we get close to the truth.\n\n# Module 2-3: Trees\n\nThink of the game Guess Who?\n\n## Trees\n\n-   Decision trees use splitting rules to stratify or segment the predictor space into a number of simple regions, either for regression or classification problems\n\n-   Can be applied to both regression and classification problems (continuous and discrete).\n\n-   We can present these rules in tree form\n\n-   It is important to remember that what trees are doing is **recursive partitioning** the feature space (X) with binary (yes/no) splits.\n\n-   Their goal is to specify regions of the covariate space such that the outcome is homogeneous and the number of observations in each region is sufficiently large, yet where the regions themselves are sufficiently numerous and unstructured to allow for complex relationships between covariates and the outcome.\n\n![](dtree.png){fig-align=\"center\" width=\"562\"}\n\n-   The tree above has two internal nodes and three terminal nodes (or leaves)\n\n-   We need to know one tree and then we can get more and more trees and create a forest.\n\n    -   this will be very powerful\n\n-   Tree-based methods to be very useful for making accurate predictions when the underlying Data Generating Process (DGP) includes nonlinearities, discontinuities, and interactions among many covariates.\n\n    -   appropriate to use when researchers' primary goal is to correctly capture the nuances of a potentially complex but known DGP in a setting with many potential predictors related in nonlinear and interactive ways to the outcome.\n\n        -   TREES SHOULD NOT BE USED FOR THEORY TESTING BUT FOR BETTER **PREDICTION**.\n\n-   The power of trees becomes apparent when we add a bunch together.\n\n-   Trying to find splits in nodes that have the largest differences between means.\n\n-   Trees split based on maximizing the information gain.\n\n    -   we want pure nodes\n\n-   Individual trees are very sensitive.\n\n-   Model is GREEDY\n\n    -   it does not backtrack\n\n        -   it finds the best split and then moves on.\n\n### Depth\n\n-   How deep do we want a tree? The deeper the tree, the more complex.\n\n    -   Greater depth may lead to an overfit.\n\n    -   ![](deep-overfit-tree-1.png){width=\"625\"}\n\n        -   This is what an overly complex tree looks like.\n\n            -   we need a balance b/c this is overfitting.\n\n-   The shallower the tree -\\> less variance.\n\n    -   but we need to find a balance so that the tree can at least capture nuances and potential interactions within the data.\n\n-   We control this by either limiting how deep it can go OR pruning the tree\n\n#### Early Stopping\n\n-   Early stopping refers to specifying how many terminal nodes the tree will have.\n\n    -   will it have 2, 3, 4, etc.\n\n<!-- -->\n\n-   The shallower the tree -\\> less variance.\n\n    -   but too shallow and we have bias\n\n        -   we need to find a balance so that the tree can at least capture nuances and potential interactions within the data.\n\n#### Pruning\n\n-   Another method to specify the depth of the tree\n\n-   we find an optimal sub-tree to\n\n-   basically determine where we can optimally set splits. (see below for an example)\n\n-   ![](pruning.png)\n\n### Benefits of trees:\n\n-   Allows p\\>\\>n\n\n-   straightforward interpretation\n\n-   naturally models interaction effects\n\n-   implicitly conducts feature selection.\n\n-   When we combine individual trees and average - they are spooky good\n\n### Entropy\n\n-   Very important for decision trees.\n\n-   Quantifies similarities and differences\n\n-   we want to minimize entropy.\n\n-   How do we decide to divide the data?\n\n-   Formula:\n\n### Bagging\n\n-   Bootstrap aggregating\n\n    -   bootstrap original dataset -\\> create a bunch of individual trees -\\> aggregate and average the individual trees.\n\n-   because we are bootstrapping from the original sample, they are all somewhat similar.\n\n-   Although usually applied to decision tree methods, it can be used with any type of method.\n\n![Drawn in class by Prof. Hare](bagging%20example.png){fig-align=\"center\" width=\"718\"}\n\n-   Still one problem:\n\n    -   Although the model building steps are independent, the trees in bagging are not completely independent of each other since all the original features are considered at every split of every tree.\n\n        -   Rather, trees from different bootstrap samples typically have similar structure to each other (especially at the top of the tree) due to any underlying strong relationships.\n\n            -   in layman terms, the independent trees we create. Look very similar.\n\n                -   this means these independent trees have a high degree of correlation with each other.\n\n                    -   Random forrests do a better job by reducing this correlation and improve the accuracy of the model.\n\n### Random Forrest\n\n-   Still do bagging but add a new rule:\n\n    -   every time a split is considered, only consider a random subset of prediction variables in which to split.\n\n-   Forces trees to be different from each other\n\n    -   individual trees become \"dumber\".\n\n-   We want diverse exploration\n\n    -   trees are exploring different components of the data generating process that may not be as obvious.\n\n-   The individual trees lack complete understanding but if we put them together, we can get a more comprehensive account of the data generating process.\n\n    -   \"Rashomon effect\"\n\n        -   Breimen uses this example.\n\n-   Honda civic of machine learning\n\n    -   neural networks are spaceships\n\n-   Still optimizing out of sample data.\n\n### Boosting\n\n-   Fit a single tree to the entire data\n\n    -   then take the residuals from the result\n\n        -   now, fit another tree to the residuals.\n\n            -   keep going.\n\n                -   it is SEQUENTIAL.\n\n-   Still have an overfitting problem\n\n-   people like boosting \\> random forest\n\n-   VERY POWERFUL!\n\n    -   best tree based method\n\n        -   and tree based methods are good for tabular data.\n\n-   Partial Dependence Plot - no idea what this is\n\n# Module 4: Interpretability\n\n-   What is interpretability?\n\n    -   **Interpretability is the degree to which a human can understand the cause of a decision.**\n\n        -   the easier it is for someone to comprehend why certain decisions or predictions have been made.\n\n-   These ML models are usually known as a \"black box\".\n\n    -   goal of interpretability = look inside that black box\n\n        -   *why is it making these predictions.*\n\n-   Do we care solely about the prediction being made or do we want to know **why** a prediction was made\n\n    -   this distinction leads us to make some decisions about our model.\n\n        -   the WHAT vs. the WHY\n\n-   Think about why OLS is so popular.\n\n    -   it is easy to interpret!\n\n        -   it is also powerful.\n\n## Interpretability Usefulness\n\n-   Interpretability is useful for detecting bias\n\n    -   If we know why it gave a prediction, we can tune it and fix any bias\n\n        -   This is important for racial bias issues.\n\n-   Interpretability can helps us extract insights and actionable information from ML models.\n\n    -   Questions like such can be answered with more interpretability:\n\n        -   *What are the most important customer attributes driving behavior?*\n\n        -   *How are these attributes related to the behavior output?*\n\n        -   *Do multiple attributes interact to drive different behavior among customers?*\n\n        -   *Why do we expect a customer to make a particular decision?*\n\n        -   *Are the decisions we are making based on predicted results fair and reliable?*\n\n## Local Interpretation v. Global Interpretation\n\n### Global Interpretation:\n\n1.  understanding how the model makes predictions, based on a holistic view of its features and how they influence the underlying model structure.\n\n    1.  think of a zoomed out view\n\n    2.  Describe how features affect the prediction **on average.**\n\n2.  Global model interpretability helps to understand the relationship between the response variable and the individual features (or subsets thereof).\n\n3.  Very hard to do in practice.\n\n    1.  we usually have hundreds of variables (even millions).\n\n        1.  We can get an idea of what variables are the most powerful but to the extent that we can **fully** grasp the model from a zoomed out view is extremely difficult.\n\n4.  Since they describe average behavior, they are good for the modeler when we want to understand the general mechanisms in the data or debug a model.\n\n#### Types of Global Interpretation Methods:\n\n1.  Partial Dependence Plot\n\n2.  Accumulated Local Effects Plot\n\n#### \n\n### Local Interpretation:\n\n1.  Global interpretation can be deceptive. It may tell us what variable is important **BUT** that is not necessarily true for all observations.\n\n    1.  **Local interpretation helps us understand what features are influencing the predicted response for a given observation (or small group of observations).**\n\n        1.  Helps us understand why our model is making a specific prediction for THAT (or a group of) observation\n\n2.  Aims to explain individual predictions\n\n# Module 5: Neural Nets and Deep Learning\n\n1.  Social scientists mostly work with tabular data\n\n    1.  Because of this, other ML methods are usually better (more simpler) for our needs.\n","srcMarkdownNoYaml":"\n\n# Preface\n\nProfessor: Christopher Hare\n\nAffiliation: UC Davis\n\nTHESE ARE NOTES! These do not and cannot replace learning the material through a classroom setting.\n\n## Files for Download\n\n### Module 1 Files\n\n### Module 2 Files\n\n### Module 3 Files\n\n### Module 4 Files\n\n## Required reading\n\n1.  James, Gareth, Daniela Witten, Trevor Hastie, and Robert Tibshirani. 2021. An Introduction\\\n    to Statistical Learning with Applications in R. 2nd ed. New York: Springer. https://www.\\\n    statlearning.com/\n\n2.  Boehmke, Bradley and Brandon Greenwell. 2019. Hands-On Machine Learning with R. Boca\\\n    Raton, FL: CRC Press. https://koalaverse.github.io/homlr/\n\n3.  Chollet, Francois, J.J. Allaire, and Tomasz Kalinowski. 2022. Deep Learning with R. 2nd ed.\\\n    Shelter Island, NY: Manning.\n\n## Coding Software\n\nThis course teaches machine learning through R. R is pretty good with machine learning and covers everything we need to. Python is good but in the interest of time, we focus on R.\n\n# Module 1: Motivation and Foundations\n\n## History of Machine Learning in Social Science\n\n### The People-Machine\n\nIn the 1950/1960s, some researchers put together a model for Kennedy's presidential campaign. The attempt was to predict voter turnout based on issue salience. Specifically, if anti-Catholicism became more salient near the election, how would that influence voter turnout? The idea was to simulate human behavior.\n\nThe point of this reading is to draw that lineage of social science and machine learning. This field is **not** new.\n\n### Statistical Modeling: The Two Cultures - Leo Breiman (2001)\n\nVery important reading. If there is any reading you should do, it should be this one - Professor Hare\n\n-   Data modeling culture\n\n    -   specify the data generating process between X and y\n\n    -   focus on inference from model parameters\n\n    -   more emphasis on **deductive** reasoning\n\n-   Algorithmic modeling culture\n\n    -   Capture the black box process between X and y\n\n    -   rather than specifying the relationship (i.e. the effect is linear, education's effect is quadratic, etc), we let the model specify or figure it out.\n\n    -   Focus is on the quality of model predictions\n\n    -   No true model: more emphasis on **inductive reasoning**/learning from data\n\n        -   lets let the data guide the model\n\n            -   contrast this with letting theory guide the model.\n\n        -   No one is saying inductive \\> deductive **or** deductive \\> inductive\n\n            -   Isaac Asimov: \"The most exciting phrase to hear in science, the one that heralds new discoveries, is not 'Eureka' but 'That's funny'...\"\n\n            -   Karl Popper emphasized deductive reasoning, but creating or discovering new theories is a necessarily inductive process (no deductive \"machinery\" is possible for theory building).\n\n## Parametric vs. Non-Parametric models\n\nOur goal is to use data to estimate f(x) (this is the line or true relationship). We want to find a function $\\hat{f}$ such that $Y\\approx \\hat{f}(\\textbf{X})$ for any observation (X, Y). So how do we estimate f(X) (the line/relationship)? We can use either a parametric or non-parametric approach/model. Up until now, I have only been taught parametric (this being linear regression, etc.).\n\nSo which is better, parametric or non-parametric? The answer is simple: *the parametric approach will outperform the non-parametric approach if the parametric form that has been selected is close to the true form of* $f$*.*\n\n### Parametric Methods\n\n1.  We make an assumption about the functional form, or shape of f (the function/line). Usually this assumption is that $f$ is linear.\n\n2.  We then need to fit or train the model. This means we need to estimate the parameters ($\\beta_1,\\beta_2,...,\\beta_p$).\n\n    1.  the most common approach and the one we have been trained extensively is ordinary least squares (OLS).\n\n        1.  OLS is one of the many possible ways to fit the linear model\n\n            1.  We use OLS because when the assumptions are met, it is BLUE.\n\n3.  One potential downside of a parametric approach is that the model we choose will usually not match the true unknown form of $f$.\n\n    1.  we want to be careful about over-fitting the data.\n\n        1.  this means they follow the errors, or noise, too closely.\n\n        2.  this is bad because your model will struggle to estimate responses on new observations that were not part of the original training data set.\n\n4.  Maybe the true relationship has some curvature (it isn't linear) *but* the linear model we create gets us reasonably close to describing the relationship between the X and Y variables.\n\n### Non-Parametric Methods\n\n1.  We **do not** make assumptions about the functional form of $f$.\n\n    1.  non-parametric approaches estimate $f$ as close to the data points as possible without being too rough or wiggly\n\n        1.  lower residuals\n\n2.  One major disadvantage of non-parametric approaches is that a lot more observations are needed to get an accurate estimate for $f$.\n\n3.  You can still over fit a non parametric model.\n\n### Prediction Accuracy and Model Interpretability\n\n![](flex_inter_tradeoff.png){fig-align=\"center\"}\n\n-   An obvious question that follows is: Why would we ever chose a more restrictive method instead of a very flexible approach? Wouldn't more flexibility get us closer to the true $f$?\n\n    -   restrictive models are easier to interpret\n\n        -   the relationship is straightforward and easy to understand!\n\n        -   OLS is not only really good (it is the best when assumptions are met) but it is super easy to interpret.\n\n### Supervised versus Unsupervised Learning\n\n#### Supervised\n\n-   Pretty much all the models I have used thus far (and listed prior) use supervised learning.\n\n    -   each observation of the predictor measurement has an associated response measurement for $x_i$ there is an associated $y_i$ value.\n\n-   Goal: prediction and inference (both involve modeling the relationship between predictors and outcome of interest)\n\n-   **The goal of supervised learning is to learn a predictive model that maps features of the data (e.g. house size, location, floor type, ...) to an output (e.g. house price). If the output is categorical, the task is called classification, and if it is numerical, it is called regression.**\n\n#### Unsupervised\n\n-   More challenging\n\n-   not focused on in this workshop.\n\n-   Goal: search for simple structure underlying data set (what are the relationships between variables)\n\n-   You have a bunch of dependent variables and you think there is some cause underlying them. We are trying to back out an X.\n\n-   for every observation we observe a *vector* of measurements $x_i$ but no associated response $y_i$\n\n    -   like going in blind\n\n-   called unsupervised because we lack a response variable that can supervise our analysis.\n\n-   One type is called cluster analysis.\n\n#### Semi-supervised learning\n\n-   more rare\n\n-   kind of in between the two.\n\n-   don't worry about this, we don't go over it.\n\n## Overfitting\n\n-   Very important concept in machine learning.\n\n-   **Overfitting occurs when a model starts to memorize the aspects of the training set and in turn loses the ability to generalize.**\n\n-   Overfitting is reducing bias at a tremendous cost to variance.\n\n-   We want a balance that gets us as close as possible.\n\n    -   what is the right amount of complexity for our model?\n\n        -   this bleeds into \"tuning\" our parameters.\n\n## The Bias - Variance Trade Off\n\n-   We need to find a balance between overfitting and underfitting our model. This balance is the bias-variance trade off.\n\n-   When we are estimating $f$, we don't want to ignore true nonlinear complexities, but we also want parsimonious models of social/behavioral phenomena that *generalize* well.\n\n-   Our estimated function $\\hat{f}$ should be an approximation to $f$ (i.e., the true data generating process) that minimizes bias and variance.\n\n-   This is referred to as a trade-of because it is easy to obtain a method with extremely low bias but high variance (for instance, by drawing a curve that passes through every single training observation) or a method with very low variance but high bias (by ftting a horizontal line to the data). The challenge lies in finding a method for which both the variance and the squared bias are low.\n\n### Variance\n\n1.  Variance refers to the amount by which $\\hat{f}$ would change if we estimated it using a different training data set.\n\n    1.  remember that we are trying to estimate $f$ using our sample. There is uncertainty around it. Different data may give us a different $\\hat{f}$.\n\n        1.  We can use one sample to estimate the variance around the estimate.\n\n            1.  this of course is called Standard Error. If a method has high variance then small changes in the training data can result in large changes in $\\hat{f}$.\n\n2.  In general more flexible statistical methods have higher variance.\n\n### Bias\n\n1.  refers to the coefficient.\n\n2.  As a general rule, as we use more flexible methods, the variance will increase and the bias will decrease.\n\n3.  Overfitting a model reduces the bias as much as possible at the expense of variance.\n\n4.  Does our estimate $\\approx$ the true population estimate\n\n## Model Error\n\nThe goal is to reduce both of these errors. But it is a bit more complex. How do we know the level of error is reducible or irreducible? The answer is gauge its predictive power. You do this through the error of your test sample. The section on cross validation will clear this up a bit more (hopefully). We want to minimize the test error.\n\n### Reducible error\n\n-   Error due to disparities between $\\hat{f}$ and $f$.\n\n-   This relates to the functional form.\n\n-   Do we include all of the relevant parameters (variables)?\n\n-   is it linear or quadratic?\n\n-   these are the elements we can control\n\n### Irreducible error\n\n-   Error due to stochastic elements that is built into Y, separate from data-generating process of $f$.\n\n-   This is error that we cannot model.\n\n    -   it is the \"randomness\" of the observations.\n\n-   Think about people. We can try to model them but every human is different for infinite reasons. We can't model that and thus, that is irreducible error.\n\n-   there will still be error remaining even if we approximate $f$ exactly.\n\n## Cross-Validation\n\nBefore diving into cross-validation and what it is, we need to continue the thread started above on model error. We need to estimate two kinds of model error to deal with bias-variance trade off.\n\n### Training Error:\n\n1.  Error rate produced when model is applied to **in-sample** data\n\n    1.  The error rate for the data used to estimate the model: how well does the model fit to existing data?\n\n### Testing Error:\n\n1.  The average error that results from using a statistical learning method to predict the response of new, **out of sample** observation.\n\n    1.  The error rate for outside data: how well does the model fit **new** data.\n\nThese two types of error are quite different: in particular, the training error rate can drastically understate the test error rate.\n\n### How do we estimate these errors?\n\nWe use cross-validation! What is it?\n\n#### Cross-validation explanation\n\n1.  Randomly divide the available set of samples into two parts: a training set and a test or hold-out set.\n\n    1.  keep 80% of the data for training and then use 20% of the data for testing\n\n        1.  this ratio can range. Could use 70-30, 50-50, etc.\n\n2.  Estimate the model using the remaining of the data.\n\n    1.  Apply the model to the observations in that subset, generating predictions $(\\hat{Y}_{test}=\\hat{f}(X_{test}))$ and residuals $Y_{test}-\\hat{Y}_{test}$ to estimate testing error.\n\n3.  One issue in doing this: we lose data.\n\n    1.  Maybe we have very little data...we don't want to give up some of that data! What do we do?\n\n        1.  To get around this, we use K-fold cross-validation.\n\n### K-fold Cross-Validation\n\n1.  Randomly divide the data into K equal sized parts. We leave out part k, fit the model to the other K-1 parts (combined), and then obtain predictions for the left-out kth part.\n\n2.  Imagine we have all the data and we bin it into 4 compartments/sections. This would be called 4-fold cross validation.\n\n    1.  Imagine we use the first three compartments to train and then the last section to test\n\n        1.  then do it again but use 3 different compartments and a different section to test.\n\n            1.  keep going through the permutations.\n\n                1.  you average across all\n\n                    1.  all the data is used.\n\n    2.  You can then compare which method/model does a better job at prediction.\n\n3.  The amount of folds you chose is arbitrary\n\n    1.  most popular is 5 or 10.\n\n4.  You do this for any ML model.\n\n![k-fold Cross Validation Visualized](k_fold_CV.png){fig-align=\"center\"}\n\n## Multivariate Adaptive Regression Splines (MARS)\n\n1.  Imagine doing a regression BUT instead of one line, you can add a bunch to fit the data.\n\n2.  Allow for nonlinearities and automate feature selection within the linear regression framework by searching for optimal hinge points or knots.\n\n    1.  this produces a series of hinge functions h(x-a), where a denotes the location of the knot and h is a regression coefficient.\n\n3.  more flexible than regression (duh)\n\n4.  We are concerned with tuning, not really the variables.\n\n5.  We just throw a bunch of Xs and specify our dependent variable and we just let the machine figure it out.\n\n6.  coefficients are not attached to variables but regions.\n\n7.  See mars.r for example code and more discussion.\n\n## Classification problems\n\n1.  When we move from regression problems (where y is continuous) to classification problems (where y is categorical), we need to assess model performance differently\n\n2.  Include different kind of fit statistics in your MLE model.\n\n3.  Confusion matrix:\n\n    1.  more to discuss here. TK 06/20/24\n\n## Curse of Dimensionality\n\n1.  Including a large number of predictor variables introduces data sparsity.\n\n    1.  this seems to relate (at least to me) as degrees of freedom (might be wrong)\n\n2.  Shrinkage or regularization methods purposefully bias the coefficients (towards zero) in such a way that improves overall predictive performance by navigating the bias-variance trade-off.\n\n3.  This is more of a conceptual problem. Every additional independent variable we include increases the space exponentially: the space that we're operating in for DV \\~ IV1 + IV2 + IV3 is exponentially larger than DV \\~ IV1 + IV2.\n\n    1.  And so we'll end up in cases where we don't have observations in unique combinations of IV1, 2, and 3. A parametric model, like OLS, will fit a line through the middle of the space (to minimize error) but it will end up giving us predictions for observations that don't exist\n\n        1.  e.g., if we are predicting vote choice using race (white, black, Asian) and partisanship (democrat, independent, republican), if we have 1,000 observations we should observe every combination of those IVs. However, if we add additional covariates, like income, gender, state of residence etc., we are likely to end up with situations where we have no observations with a given combination of covariate values (e.g., perhaps we have no black, female, republicans who make \\>\\$100k, and live in Alaska)\n\n            1.  This is a problem ML field cares about but the political science field does not give this issue much attention (they should).\n\n## Receiver-operator characteristic curves\n\n-   navan.name/roc/\n\n    -   good explanation of ROC.\n\n        -   the more we separate the sets of outcomes (blue and red pdfs), the better our model is.\n\n-   True positive rate against the False positive rate\n\n-   Binary Classification method\n\n-   seems popular in health.\n\n-   Area under the Curve (AUC) - we want to maximize this value.\n\n-   I think we use to evaluate different models?????????\n\n## Shrinkage and Regularization\n\nI'm confused about this...still not clear. Why would we need this when we have k-fold cross validation...doesn't that minimize bias? How do we know when to use these methods? Answer from 06/21 - we apply cross validation to these methods to determine what amount of shrinkage we want.\n\n-   Our end-goal is an accurate model (as measured by out-of-sample or test set performance)\n\n    -   We can use shrinkage and regularization to help us.\n\n        -   helps us prevennt over fitting.\n\n-   Shrinkage pulls coefficients closer to zero as the regularization parameter increases.\n\n### Ridge Regression (L2)\n\n-   AKA penalized least squares or penalized likelihood) is another shrinkage method that penalizes large magnitude values of beta coefficients in regression models.\n\n-   we add bias to our coefficients\n\n    -   why would we do that?\n\n        -   push our regression parameters closer to zero.\n\n            -   **helps our variance**.\n\n                -   bias-variance trade off to maximize fit for out of sample observations.\n\n-   Literally a regression model, just adding a penalization function. (square the beta)\n\n-   Shrinkage: when you have less data shrink to the overall mean.\n\n    -   think of batting averages - Hank Aaron vs. some random guy who had one at bat and has a perfect batting average.\n\n-   $\\lambda$ is important\n\n    -   can be any value between zero and infinity\n\n    -   if zero then the ridge regression penalty will equal the same line as the OLS line.\n\n    -   the larger the value, the greater the penalty\n\n        -   think of the slope of the line changing.\n\n    -   How do we figure out which $\\lambda$ is the most optimal?\n\n        -   We use cross-validation!\n\n            -   to determine what $\\lambda$ produces lowest variance\n\n-   Can also be used if IV is discrete.\n\n    -   and logistic regression.\n\n### Lasso (L1)\n\n## Simulations\n\n1.  Simulations are most of what we do here.\n\n2.  Re-sampling to estimate uncertainty intervals\n\n3.  Bootstrapping to estimate uncertainty intervals\n\n4.  Monte Carlo experiments to learn about the properties of an estimator, uncover predictor effects, and evaluate counterfactual/future scenarios.\n\n## Bootstrapping\n\n1.  We can make a whole bunch of new samples with the original sample.\n\n2.  We can't see the population parameter, but we can estimate it using repeated samples via bootstrapping.\n\n    1.  we can get pretty damn close to it!\n\n# Meeting with Sam Fuller (TA) 06/24\n\n1.  By minimizing the test error, we can discriminate between reducible and irreducible error. Correct?\n\n2.  these algorithms are really good at fitting data\n\n3.  you must cross validate - basically.\n\n    1.  very useful\n\n4.  Parametric v. non-parametric difference\n\n    1.  ML land is focused on prediction - we don't care about the black box\n\n        1.  we just care about how good it is.\n\n    2.  in parametric land we care about the variable - not really R\\^2\n\n    3.  Maybe this division outlined above is not ideal\n\n        1.  distinction without a difference.\n\n    4.  Parametric models are not perfect and not necessarily the best for causal inference - Sam.\n\n5.  Read Breiman\n\n6.  The issue is with this method is that you will get pushback from people who don't understand.\n\n7.  still need to know what and how to measure - this is where the theory comes from.\n\n8.  How do we know which models to use.\n\n    1.  Sam thinks MARS and regularization are lipstick on a pig\n\n        1.  still using parametric assumptions but using ML\n\n9.  Inference vs ML\n\n    1.  Sam thinks interpretation is better than inference.\n\n10. Random forests is the meet of the class.\n\n    1.  dumb decision trees but when we sum them all together we get close to the truth.\n\n# Module 2-3: Trees\n\nThink of the game Guess Who?\n\n## Trees\n\n-   Decision trees use splitting rules to stratify or segment the predictor space into a number of simple regions, either for regression or classification problems\n\n-   Can be applied to both regression and classification problems (continuous and discrete).\n\n-   We can present these rules in tree form\n\n-   It is important to remember that what trees are doing is **recursive partitioning** the feature space (X) with binary (yes/no) splits.\n\n-   Their goal is to specify regions of the covariate space such that the outcome is homogeneous and the number of observations in each region is sufficiently large, yet where the regions themselves are sufficiently numerous and unstructured to allow for complex relationships between covariates and the outcome.\n\n![](dtree.png){fig-align=\"center\" width=\"562\"}\n\n-   The tree above has two internal nodes and three terminal nodes (or leaves)\n\n-   We need to know one tree and then we can get more and more trees and create a forest.\n\n    -   this will be very powerful\n\n-   Tree-based methods to be very useful for making accurate predictions when the underlying Data Generating Process (DGP) includes nonlinearities, discontinuities, and interactions among many covariates.\n\n    -   appropriate to use when researchers' primary goal is to correctly capture the nuances of a potentially complex but known DGP in a setting with many potential predictors related in nonlinear and interactive ways to the outcome.\n\n        -   TREES SHOULD NOT BE USED FOR THEORY TESTING BUT FOR BETTER **PREDICTION**.\n\n-   The power of trees becomes apparent when we add a bunch together.\n\n-   Trying to find splits in nodes that have the largest differences between means.\n\n-   Trees split based on maximizing the information gain.\n\n    -   we want pure nodes\n\n-   Individual trees are very sensitive.\n\n-   Model is GREEDY\n\n    -   it does not backtrack\n\n        -   it finds the best split and then moves on.\n\n### Depth\n\n-   How deep do we want a tree? The deeper the tree, the more complex.\n\n    -   Greater depth may lead to an overfit.\n\n    -   ![](deep-overfit-tree-1.png){width=\"625\"}\n\n        -   This is what an overly complex tree looks like.\n\n            -   we need a balance b/c this is overfitting.\n\n-   The shallower the tree -\\> less variance.\n\n    -   but we need to find a balance so that the tree can at least capture nuances and potential interactions within the data.\n\n-   We control this by either limiting how deep it can go OR pruning the tree\n\n#### Early Stopping\n\n-   Early stopping refers to specifying how many terminal nodes the tree will have.\n\n    -   will it have 2, 3, 4, etc.\n\n<!-- -->\n\n-   The shallower the tree -\\> less variance.\n\n    -   but too shallow and we have bias\n\n        -   we need to find a balance so that the tree can at least capture nuances and potential interactions within the data.\n\n#### Pruning\n\n-   Another method to specify the depth of the tree\n\n-   we find an optimal sub-tree to\n\n-   basically determine where we can optimally set splits. (see below for an example)\n\n-   ![](pruning.png)\n\n### Benefits of trees:\n\n-   Allows p\\>\\>n\n\n-   straightforward interpretation\n\n-   naturally models interaction effects\n\n-   implicitly conducts feature selection.\n\n-   When we combine individual trees and average - they are spooky good\n\n### Entropy\n\n-   Very important for decision trees.\n\n-   Quantifies similarities and differences\n\n-   we want to minimize entropy.\n\n-   How do we decide to divide the data?\n\n-   Formula:\n\n### Bagging\n\n-   Bootstrap aggregating\n\n    -   bootstrap original dataset -\\> create a bunch of individual trees -\\> aggregate and average the individual trees.\n\n-   because we are bootstrapping from the original sample, they are all somewhat similar.\n\n-   Although usually applied to decision tree methods, it can be used with any type of method.\n\n![Drawn in class by Prof. Hare](bagging%20example.png){fig-align=\"center\" width=\"718\"}\n\n-   Still one problem:\n\n    -   Although the model building steps are independent, the trees in bagging are not completely independent of each other since all the original features are considered at every split of every tree.\n\n        -   Rather, trees from different bootstrap samples typically have similar structure to each other (especially at the top of the tree) due to any underlying strong relationships.\n\n            -   in layman terms, the independent trees we create. Look very similar.\n\n                -   this means these independent trees have a high degree of correlation with each other.\n\n                    -   Random forrests do a better job by reducing this correlation and improve the accuracy of the model.\n\n### Random Forrest\n\n-   Still do bagging but add a new rule:\n\n    -   every time a split is considered, only consider a random subset of prediction variables in which to split.\n\n-   Forces trees to be different from each other\n\n    -   individual trees become \"dumber\".\n\n-   We want diverse exploration\n\n    -   trees are exploring different components of the data generating process that may not be as obvious.\n\n-   The individual trees lack complete understanding but if we put them together, we can get a more comprehensive account of the data generating process.\n\n    -   \"Rashomon effect\"\n\n        -   Breimen uses this example.\n\n-   Honda civic of machine learning\n\n    -   neural networks are spaceships\n\n-   Still optimizing out of sample data.\n\n### Boosting\n\n-   Fit a single tree to the entire data\n\n    -   then take the residuals from the result\n\n        -   now, fit another tree to the residuals.\n\n            -   keep going.\n\n                -   it is SEQUENTIAL.\n\n-   Still have an overfitting problem\n\n-   people like boosting \\> random forest\n\n-   VERY POWERFUL!\n\n    -   best tree based method\n\n        -   and tree based methods are good for tabular data.\n\n-   Partial Dependence Plot - no idea what this is\n\n# Module 4: Interpretability\n\n-   What is interpretability?\n\n    -   **Interpretability is the degree to which a human can understand the cause of a decision.**\n\n        -   the easier it is for someone to comprehend why certain decisions or predictions have been made.\n\n-   These ML models are usually known as a \"black box\".\n\n    -   goal of interpretability = look inside that black box\n\n        -   *why is it making these predictions.*\n\n-   Do we care solely about the prediction being made or do we want to know **why** a prediction was made\n\n    -   this distinction leads us to make some decisions about our model.\n\n        -   the WHAT vs. the WHY\n\n-   Think about why OLS is so popular.\n\n    -   it is easy to interpret!\n\n        -   it is also powerful.\n\n## Interpretability Usefulness\n\n-   Interpretability is useful for detecting bias\n\n    -   If we know why it gave a prediction, we can tune it and fix any bias\n\n        -   This is important for racial bias issues.\n\n-   Interpretability can helps us extract insights and actionable information from ML models.\n\n    -   Questions like such can be answered with more interpretability:\n\n        -   *What are the most important customer attributes driving behavior?*\n\n        -   *How are these attributes related to the behavior output?*\n\n        -   *Do multiple attributes interact to drive different behavior among customers?*\n\n        -   *Why do we expect a customer to make a particular decision?*\n\n        -   *Are the decisions we are making based on predicted results fair and reliable?*\n\n## Local Interpretation v. Global Interpretation\n\n### Global Interpretation:\n\n1.  understanding how the model makes predictions, based on a holistic view of its features and how they influence the underlying model structure.\n\n    1.  think of a zoomed out view\n\n    2.  Describe how features affect the prediction **on average.**\n\n2.  Global model interpretability helps to understand the relationship between the response variable and the individual features (or subsets thereof).\n\n3.  Very hard to do in practice.\n\n    1.  we usually have hundreds of variables (even millions).\n\n        1.  We can get an idea of what variables are the most powerful but to the extent that we can **fully** grasp the model from a zoomed out view is extremely difficult.\n\n4.  Since they describe average behavior, they are good for the modeler when we want to understand the general mechanisms in the data or debug a model.\n\n#### Types of Global Interpretation Methods:\n\n1.  Partial Dependence Plot\n\n2.  Accumulated Local Effects Plot\n\n#### \n\n### Local Interpretation:\n\n1.  Global interpretation can be deceptive. It may tell us what variable is important **BUT** that is not necessarily true for all observations.\n\n    1.  **Local interpretation helps us understand what features are influencing the predicted response for a given observation (or small group of observations).**\n\n        1.  Helps us understand why our model is making a specific prediction for THAT (or a group of) observation\n\n2.  Aims to explain individual predictions\n\n# Module 5: Neural Nets and Deep Learning\n\n1.  Social scientists mostly work with tabular data\n\n    1.  Because of this, other ML methods are usually better (more simpler) for our needs.\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"markdown"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["../../styles.css"],"toc":true,"output-file":"index.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.4.554","editor":"visual","theme":"cosmo","title":"Machine Learning: Applications in Social Science Research (ICPSR)","author":[{"name":"Stone Neilon","url":"https://stoneneilon.github.io/","orcid":"0009-0006-6026-4384","affiliation":"PhD student of political science @ The University of Colorado Boulder","affiliation-url":"https://www.colorado.edu/polisci/people/graduate-students/stone-neilon"}],"date":"06-10-2024","categories":["Summer","ICPSR",2024,"Methods"],"citation":{"url":"https://samanthacsik.github.io/posts/2022-10-24-my-blog-post/"},"image":"terminator.jpeg","draft":false},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}